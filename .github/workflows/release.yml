name: Release

on:
    push:
      # Sequence of patterns matched against refs/tags
      tags:
        - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  
jobs:
    create_release:
        name: Create Release
        runs-on: ubuntu-latest
        steps:
          - name: Create Release
            id: create_release
            uses: actions/create-release@v1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
            with:
              tag_name: ${{ github.ref }}
              release_name: Automice - MouseMover ${{ github.ref }}
              draft: false
              prerelease: false
          - shell: bash
            run: echo ${{ steps.create_release.outputs.upload_url }} > release_upload_url.txt
          - name: Upload release url
            uses: actions/upload-artifact@v1
            with:
                name: release_url
                path: release_upload_url.txt
  
    build_release:
        name: Build and Release
        runs-on: ${{matrix.os}}
        needs: [create_release]
        strategy:
            matrix:
              python-version: [3.7]
              os: [ubuntu-latest, windows-latest, macos-latest]

        steps:
          - name: Download release url
            uses: actions/download-artifact@v1
            with:
                name: release_url
          - shell: bash
            run: |
                export release_url=`cat release_url/release_upload_url.txt`
                echo "::set-env name=release_url::$release_url" 
                
          - uses: actions/checkout@v2
          - name: Set up Python ${{ matrix.python-version }}
            uses: actions/setup-python@v2
            with:
                  python-version: ${{ matrix.python-version }}
          - name: Install dependencies
            run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt
          - name: Build
            run: python ./build-release.py
            
          - name: Get package name  
            shell: bash
            run: |
                export package_path=`ls dist/*.zip| head -1`
                export package_name=`echo $package_path | cut -d'/' -f 2`
                echo "::set-env name=package_path::$package_path" 
                echo "::set-env name=package_name::$package_name" 

          - name: Upload Release Asset
            id: upload_release_asset 
            uses: actions/upload-release-asset@v1
            env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
                upload_url: ${{ release_url }}
                asset_path: ${{ package_path }}
                asset_name: ${{ package_name }}
                asset_content_type: application/zip
